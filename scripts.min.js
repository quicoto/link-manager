(()=>{"use strict";var t={d:(o,e)=>{for(var n in e)t.o(e,n)&&!t.o(o,n)&&Object.defineProperty(o,n,{enumerable:!0,get:e[n]})},o:(t,o)=>Object.prototype.hasOwnProperty.call(t,o),r:t=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})}},o={};t.r(o),t.d(o,{$:()=>e,I:()=>n});const e={base:"link-manager__base"},n={base:`.${e.base}`};function a(t,n){let a="",s=e.postDefaultBackground;var r,i;return t.todo__done&&(s=e.postDoneBackground),a+=`\n  <article class="todo__post position-relative row ${s} p-3 mb-3" data-${o.DATA_ATTRIBUTES.postID}="${t.ID}">\n    <div class="${e.loading}">${n.innerHTML}</div>\n    ${function(t){let o="";return t&&(o=`<div class="col-12"><h3>${t}</h3></div>`),o}(t.post_title)}\n    ${i=t.post_date,`<div class="col-12"><small>${i}</small></div>`}\n    ${function(t){return`<div class="col-12 mb-3 todo__postContent">${t.replace(/\n/g,"<br />")}</div>`}(t.post_content)}\n    ${r=t.ID,`\n  <div\n    class="todo__postActions col-12 col-sm-6 offset-sm-6 col-md-4 offset-md-8 col-lg-3 offset-lg-9 text-right"\n    >\n    <button\n      data-${o.DATA_ATTRIBUTES.postID}="${r}"\n      type="button"\n      class="btn btn-success btn-block todo__buttonDone">\n        Mark as done\n      </button>\n  </div>`}\n  </article>\n`,a}!function(){const t={counterTodo:0,counterTotal:0},o={};function s(t){if(t.logged_out){const t=document.querySelector(n.homeUrlLink);t&&(window.location=t.getAttribute("href"))}}function r(){o.counter.innerHTML=`<h3 class="d-flex justify-content-between">\n    <div>To do: <span class="todo__counterTodo">${t.counterTodo}</span></div>\n    <div>Total: <span class="todo__counterTotal">${t.counterTotal}</span></div>\n  </h3>`}function i(){let e="";const n=new FormData;t.counterTodo=0,o.loading.removeAttribute("hidden"),n.append("action","todo_all_posts"),n.append("nonce",linkmanager_main_ajax.nonce),fetch(linkmanager_main_ajax.ajax_url,{method:"POST",credentials:"same-origin",body:n}).then((t=>t.json())).then((n=>{s(n),n.forEach((n=>{e+=a(n,o.loading),n.todo__done||(t.counterTodo+=1)})),t.counterTotal=n.length,r(),o.postsContainer.innerHTML=e,o.loading.setAttribute("hidden",!0)})).catch((t=>{console.log("[To Do - All Posts]",t),s({logged_out:!0})}))}o.loading=document.querySelector(n.loading),o.newPostForm=document.querySelector(n.newPostForm),o.newPostSubmitButton=document.querySelector(n.newPostSubmitButton),o.postsContainer=document.querySelector(n.postsContainer),o.refreshListButton=document.querySelector(n.refreshListButton),o.counter=document.querySelector(n.counter),o.newPostForm&&(o.newPostForm&&o.newPostForm.addEventListener("submit",(function(e){const i=new FormData;return e.preventDefault(),o.newPostSubmitButton.setAttribute("disabled",!0),o.loading.removeAttribute("hidden"),o.newPostContent=document.querySelector(n.newPostContent),i.append("action","todo_create_post"),i.append("nonce",linkmanager_main_ajax.nonce),i.append("post_content",o.newPostContent.value),fetch(linkmanager_main_ajax.ajax_url,{method:"POST",credentials:"same-origin",body:i}).then((t=>t.json())).then((e=>{s(e),t.counterTodo+=1,t.counterTotal+=1,r(),function(t){const e=a(t,o.loading);o.postsContainer.innerHTML=`${e}${o.postsContainer.innerHTML}`}(e),o.loading.setAttribute("hidden",!0),o.newPostForm.reset(),o.newPostSubmitButton.removeAttribute("disabled")})).catch((t=>{console.log("[To Do - Create Post]",t),s({logged_out:!0})})),!1})),o.postsContainer&&o.postsContainer.addEventListener("click",(function(o){if(!o.target.classList.contains(e.buttonDone))return!1;o.preventDefault(),o.target.setAttribute("disabled",!0);const n=+o.target.dataset[DATA_ATTRIBUTES.postID],a=document.querySelector(`[data-${DATA_ATTRIBUTES.postID}="${n}"]`),i=new FormData;return i.append("action","todo_post_done"),i.append("nonce",linkmanager_main_ajax.nonce),i.append("post_id",n),a.classList.add(e.working),fetch(linkmanager_main_ajax.ajax_url,{method:"POST",credentials:"same-origin",body:i}).then((t=>t.json())).then((o=>{s(o),a&&(a.classList.remove(e.working),a.classList.remove(e.postDefaultBackground),a.classList.add(e.postDoneBackground)),t.counterTodo-=1,r()})).catch((t=>{console.log("[To Do - Post Done]",t),s({logged_out:!0})})),!0})),o.refreshListButton&&o.refreshListButton.addEventListener("click",i),i())}()})();